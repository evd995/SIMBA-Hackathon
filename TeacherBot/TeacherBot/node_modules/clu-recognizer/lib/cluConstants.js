"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.CluConstants = void 0;
class TrackEventOptions {
}
/**
 * The name of the recognizer result event to track.
 */
TrackEventOptions.RecognizerResultEventName = 'CluResult';
/**
 * The name of the clu result cached event to track.
 */
TrackEventOptions.ResultCachedEventName = 'CluResultCached';
/**
 * The name of the read from cached clu result event to track.
 */
TrackEventOptions.ReadFromCachedResultEventName = 'ReadFromCachedCluResult';
class ResponseOptions {
}
/**
 * The CLU response result key.
 */
ResponseOptions.ResultKey = 'result';
/**
 * The CLU response prediction key.
 */
ResponseOptions.PredictionKey = 'prediction';
class TraceOptions {
}
/**
 * The name of the CLU trace activity.
 */
TraceOptions.ActivityName = 'CluRecognizer';
/**
 * The value type for a CLU trace activity.
 */
TraceOptions.TraceType = 'https://www.clu.ai/schemas/trace';
/**
 * The context label for a CLU trace activity.
 */
TraceOptions.TraceLabel = 'Clu Trace';
class HttpClientOptions {
}
/**
 * The default logical name of the HttpClient to create.
 */
HttpClientOptions.DefaultLogicalName = 'clu';
/**
 * The default time in milliseconds to wait before the request times out.
 */
HttpClientOptions.Timeout = 100000;
class Telemetry {
}
/**
 * The Key used when storing a CLU Result in a custom event within telemetry.
 */
Telemetry.CluResult = 'CluResult';
/**
 * The Key used when storing a CLU Project Name in a custom event within telemetry.
 */
Telemetry.ProjectNameProperty = 'projectName';
/**
 * The Key used when storing a CLU intent in a custom event within telemetry.
 */
Telemetry.IntentProperty = 'intent';
/**
 * The Key used when storing a CLU intent score in a custom event within telemetry.
 */
Telemetry.IntentScoreProperty = 'intentScore';
/**
 * The Key used when storing a CLU intent in a custom event within telemetry.
 */
Telemetry.Intent2Property = 'intent2';
/**
 * The Key used when storing a CLU intent score in a custom event within telemetry.
 */
Telemetry.IntentScore2Property = 'intentScore2';
/**
 * The Key used when storing CLU entities in a custom event within telemetry.
 */
Telemetry.EntitiesProperty = 'entities';
/**
 * The Key used when storing the CLU query in a custom event within telemetry.
 */
Telemetry.QuestionProperty = 'question';
/**
 * The Key used when storing the FromId in a custom event within telemetry.
 */
Telemetry.FromIdProperty = 'fromId';
class RequestOptions {
}
/**
 * The Kind value of the CLU request body.
 */
RequestOptions.Kind = 'Conversation';
/**
 * The Conversation Item Id value of the CLU request body.
 */
RequestOptions.ConversationItemId = '1';
/**
 * The Conversation Item Participant Id value of the CLU request body.
 */
RequestOptions.ConversationItemParticipantId = '1';
/**
 * The String Index Type value of the CLU request body.
 */
RequestOptions.StringIndexType = 'TextElement_V8';
/**
 * The API Version of the CLU service.
 */
RequestOptions.ApiVersion = '2022-05-01';
/**
 * The name of the CLU subscription key header.
 */
RequestOptions.SubscriptionKeyHeaderName = 'Ocp-Apim-Subscription-Key';
/**
 * The CLU Constants.
 */
class CluConstants {
}
exports.CluConstants = CluConstants;
/**
 * The recognizer result response property name to include the CLU result.
 */
CluConstants.RecognizerResultResponsePropertyName = 'cluResult';
/**
 * The CLU track event constants.
 */
CluConstants.TrackEventOptions = TrackEventOptions;
/**
 * The CLU response constants.
 */
CluConstants.ResponseOptions = ResponseOptions;
/**
 * The CLU trace constants.
 */
CluConstants.TraceOptions = TraceOptions;
/**
 * The CLU HttpClient constants.
 */
CluConstants.HttpClientOptions = HttpClientOptions;
/**
 * The BotTelemetryClient event and property names that are logged by default.
 */
CluConstants.Telemetry = Telemetry;
/**
 * The CLU request body default constants.
 */
CluConstants.RequestOptions = RequestOptions;
//# sourceMappingURL=cluConstants.js.map