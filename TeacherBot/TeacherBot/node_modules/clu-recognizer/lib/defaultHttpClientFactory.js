"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DefaultHttpClientFactory = exports.USER_AGENT = void 0;
const ms_rest_js_1 = require("@azure/ms-rest-js");
const package_json_1 = __importDefault(require("botbuilder/package.json"));
exports.USER_AGENT = `Microsoft-BotFramework/3.1 ${package_json_1.default.name}/${package_json_1.default.version} ${ms_rest_js_1.getDefaultUserAgentValue()} `;
/**
 * HttpClientFactory that always returns the same HttpClient instance for CLU calls.
 */
class DefaultHttpClientFactory {
    /**
     * Initializes a new instance of the DefaultHttpClientFactory class.
     * @param turnContext The current turn context.
     */
    constructor(turnContext) {
        const connectorClient = turnContext.turnState.get(turnContext.adapter.ConnectorClientKey);
        this.httpClient = new ms_rest_js_1.ServiceClient(connectorClient.credentials, {
            requestPolicyFactories: (factories) => factories.concat([
                ms_rest_js_1.throttlingRetryPolicy(),
                ms_rest_js_1.userAgentPolicy({ value: exports.USER_AGENT }),
            ]),
        });
    }
    /**
     * Returns the same default HttpClient instance.
     * @returns The same HttpClient instance.
     */
    create() {
        return this.httpClient;
    }
}
exports.DefaultHttpClientFactory = DefaultHttpClientFactory;
//# sourceMappingURL=defaultHttpClientFactory.js.map